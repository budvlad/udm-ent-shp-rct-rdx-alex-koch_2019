{"ast":null,"code":"import { FETCH_PHONES_START, FETCH_PHONES_SUCCESS, FETCH_PHONES_FAILURE, LOAD_MORE_PHONES_START, LOAD_MORE_PHONES_SUCCESS, LOAD_MORE_PHONES_FAILURE, FETCH_PHONE_BY_ID_START, FETCH_PHONE_BY_ID_SUCCESS, FETCH_PHONE_BY_ID_FAILURE } from 'actionTypes';\nimport { fetchPhones as fetchPhonesApi, loadMorePhones as loadMorePhonesApi } from 'api';\nimport { getRenderedPhonesLenght } from 'selectors';\nexport const fetchPhones = () => async dispatch => {\n  dispatch({\n    type: FETCH_PHONES_START\n  });\n\n  try {\n    const phones = await fetchPhonesApi();\n    dispatch({\n      type: FETCH_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\nexport const loadMorePhones = () => async (dispatch, getState) => {\n  const offset = getRenderedPhonesLenght(getState());\n  dispatch({\n    type: LOAD_MORE_PHONES_START\n  });\n\n  try {\n    const phones = await loadMorePhonesApi({\n      offset\n    });\n    dispatch({\n      type: LOAD_MORE_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_MORE_PHONES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};","map":{"version":3,"sources":["/home/vladymyr/Рабочий стол/project/web/udemy/udm-ent-shp-rct-rdx-alex-koch_2019/src/node_modules/actions/index.js"],"names":["FETCH_PHONES_START","FETCH_PHONES_SUCCESS","FETCH_PHONES_FAILURE","LOAD_MORE_PHONES_START","LOAD_MORE_PHONES_SUCCESS","LOAD_MORE_PHONES_FAILURE","FETCH_PHONE_BY_ID_START","FETCH_PHONE_BY_ID_SUCCESS","FETCH_PHONE_BY_ID_FAILURE","fetchPhones","fetchPhonesApi","loadMorePhones","loadMorePhonesApi","getRenderedPhonesLenght","dispatch","type","phones","payload","err","error","getState","offset"],"mappings":"AAAA,SACEA,kBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,sBAJF,EAKEC,wBALF,EAMEC,wBANF,EAOEC,uBAPF,EAQEC,yBARF,EASEC,yBATF,QAUO,aAVP;AAWA,SACEC,WAAW,IAAIC,cADjB,EAEEC,cAAc,IAAIC,iBAFpB,QAGO,KAHP;AAIA,SAAQC,uBAAR,QAAsC,WAAtC;AAEA,OAAO,MAAMJ,WAAW,GAAG,MAAM,MAAMK,QAAN,IAAkB;AACjDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEf;AAAP,GAAD,CAAR;;AAEA,MAAI;AACF,UAAMgB,MAAM,GAAG,MAAMN,cAAc,EAAnC;AACAI,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,oBADC;AAEPgB,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOE,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,oBADC;AAEPe,MAAAA,OAAO,EAAEC,GAFF;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAAD,CAAR;AAKD;AACF,CAhBM;AAkBP,OAAO,MAAMR,cAAc,GAAG,MAAM,OAAOG,QAAP,EAAiBM,QAAjB,KAA8B;AAChE,QAAMC,MAAM,GAAGR,uBAAuB,CAACO,QAAQ,EAAT,CAAtC;AACAN,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEZ;AAAP,GAAD,CAAR;;AAEA,MAAI;AACF,UAAMa,MAAM,GAAG,MAAMJ,iBAAiB,CAAC;AAACS,MAAAA;AAAD,KAAD,CAAtC;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,wBADC;AAEPa,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOE,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,wBADC;AAEPY,MAAAA,OAAO,EAAEC,GAFF;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAAD,CAAR;AAKD;AACF,CAjBM","sourcesContent":["import {\n  FETCH_PHONES_START,\n  FETCH_PHONES_SUCCESS,\n  FETCH_PHONES_FAILURE,\n  LOAD_MORE_PHONES_START,\n  LOAD_MORE_PHONES_SUCCESS,\n  LOAD_MORE_PHONES_FAILURE,\n  FETCH_PHONE_BY_ID_START,\n  FETCH_PHONE_BY_ID_SUCCESS,\n  FETCH_PHONE_BY_ID_FAILURE\n} from 'actionTypes';\nimport {\n  fetchPhones as fetchPhonesApi,\n  loadMorePhones as loadMorePhonesApi\n} from 'api';\nimport {getRenderedPhonesLenght} from 'selectors';\n\nexport const fetchPhones = () => async dispatch => {\n  dispatch({type: FETCH_PHONES_START});\n\n  try {\n    const phones = await fetchPhonesApi();\n    dispatch({\n      type: FETCH_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\n\nexport const loadMorePhones = () => async (dispatch, getState) => {\n  const offset = getRenderedPhonesLenght(getState());\n  dispatch({type: LOAD_MORE_PHONES_START});\n\n  try {\n    const phones = await loadMorePhonesApi({offset});\n    dispatch({\n      type: LOAD_MORE_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_MORE_PHONES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { FETCH_PHONES_START, FETCH_PHONES_SUCCESS, FETCH_PHONES_FAILURES, LOAD_MORE_PHONES_START, LOAD_MORE_PHONES_SUCCESS, LOAD_MORE_PHONES_FAILURES } from 'actionTypes';\nimport { fetchPhones as fetchPhonesApi, loadMorePhones as loadMorePhonesApi } from 'api';\nexport const fetchPhones = () => async dispatch => {\n  dispatch({\n    type: FETCH_PHONES_START\n  });\n\n  try {\n    const phones = await fetchPhonesApi();\n    dispatch({\n      type: FETCH_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONES_FAILURES,\n      payload: err,\n      err: true\n    });\n  }\n};\nexport const loadMorePhones = () => async (dispatch, getState) => {\n  const offset = getRenderedPhonesLength(getState());\n  dispatch({\n    type: LOAD_MORE_PHONES_START\n  });\n\n  try {\n    const phones = await loadMorePhonesApi({\n      offset\n    });\n    dispatch({\n      type: LOAD_MORE_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_MORE_PHONES_FAILURES,\n      payload: err,\n      err: true\n    });\n  }\n};","map":{"version":3,"sources":["/home/vladymyr/Рабочий стол/project/web/udemy/udm-ent-shp-rct-rdx-alex-koch_2019/src/node_modules/actions/index.js"],"names":["FETCH_PHONES_START","FETCH_PHONES_SUCCESS","FETCH_PHONES_FAILURES","LOAD_MORE_PHONES_START","LOAD_MORE_PHONES_SUCCESS","LOAD_MORE_PHONES_FAILURES","fetchPhones","fetchPhonesApi","loadMorePhones","loadMorePhonesApi","dispatch","type","phones","payload","err","getState","offset","getRenderedPhonesLength"],"mappings":"AAAA,SACEA,kBADF,EAEEC,oBAFF,EAGEC,qBAHF,EAIEC,sBAJF,EAKEC,wBALF,EAMEC,yBANF,QAOO,aAPP;AAQA,SACEC,WAAW,IAAIC,cADjB,EAEEC,cAAc,IAAIC,iBAFpB,QAGO,KAHP;AAKA,OAAO,MAAMH,WAAW,GAAG,MAAM,MAAMI,QAAN,IAAkB;AACjDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAMY,MAAM,GAAG,MAAML,cAAc,EAAnC;AACAG,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,oBADC;AAEPY,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOE,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,qBADC;AAEPW,MAAAA,OAAO,EAAEC,GAFF;AAGPA,MAAAA,GAAG,EAAE;AAHE,KAAD,CAAR;AAKD;AACF,CAlBM;AAoBP,OAAO,MAAMN,cAAc,GAAG,MAAM,OAAOE,QAAP,EAAiBK,QAAjB,KAA8B;AAChE,QAAMC,MAAM,GAAGC,uBAAuB,CAACF,QAAQ,EAAT,CAAtC;AACAL,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAMS,MAAM,GAAG,MAAMH,iBAAiB,CAAC;AAACO,MAAAA;AAAD,KAAD,CAAtC;AACAN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,wBADC;AAEPS,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOE,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,yBADC;AAEPQ,MAAAA,OAAO,EAAEC,GAFF;AAGPA,MAAAA,GAAG,EAAE;AAHE,KAAD,CAAR;AAKD;AACF,CAnBM","sourcesContent":["import {\n  FETCH_PHONES_START,\n  FETCH_PHONES_SUCCESS,\n  FETCH_PHONES_FAILURES,\n  LOAD_MORE_PHONES_START,\n  LOAD_MORE_PHONES_SUCCESS,\n  LOAD_MORE_PHONES_FAILURES\n} from 'actionTypes';\nimport {\n  fetchPhones as fetchPhonesApi,\n  loadMorePhones as loadMorePhonesApi\n} from 'api';\n\nexport const fetchPhones = () => async dispatch => {\n  dispatch({\n    type: FETCH_PHONES_START\n  });\n\n  try {\n    const phones = await fetchPhonesApi();\n    dispatch({\n      type: FETCH_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONES_FAILURES,\n      payload: err,\n      err: true\n    });\n  }\n};\n\nexport const loadMorePhones = () => async (dispatch, getState) => {\n  const offset = getRenderedPhonesLength(getState());\n  dispatch({\n    type: LOAD_MORE_PHONES_START\n  });\n\n  try {\n    const phones = await loadMorePhonesApi({offset});\n    dispatch({\n      type: LOAD_MORE_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_MORE_PHONES_FAILURES,\n      payload: err,\n      err: true\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}